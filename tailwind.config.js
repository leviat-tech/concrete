const primitives = {
  base: {
    50: 'rgb(var(--colors-base-50))',
    100: 'rgb(var(--colors-base-100))',
    200: 'rgb(var(--colors-base-200))',
    300: 'rgb(var(--colors-base-300))',
    400: 'rgb(var(--colors-base-400))',
    500: 'rgb(var(--colors-base-500))',
    600: 'rgb(var(--colors-base-600))',
    700: 'rgb(var(--colors-base-700))',
    800: 'rgb(var(--colors-base-800))',
    900: 'rgb(var(--colors-base-900))',
    950: 'rgb(var(--colors-base-950))',
  },
  brand: {
    50: 'rgb(var(--colors-brand-50))',
    100: 'rgb(var(--colors-brand-100))',
    200: 'rgb(var(--colors-brand-200))',
    300: 'rgb(var(--colors-brand-300))',
    400: 'rgb(var(--colors-brand-400))',
    500: 'rgb(var(--colors-brand-500))',
    600: 'rgb(var(--colors-brand-600))',
    700: 'rgb(var(--colors-brand-700))',
    800: 'rgb(var(--colors-brand-800))',
    900: 'rgb(var(--colors-brand-900))',
    950: 'rgb(var(--colors-brand-950))',
  },
  info: {
    50: 'rgb(var(--colors-info-50))',
    100: 'rgb(var(--colors-info-100))',
    200: 'rgb(var(--colors-info-200))',
    300: 'rgb(var(--colors-info-300))',
    400: 'rgb(var(--colors-info-400))',
    500: 'rgb(var(--colors-info-500))',
    600: 'rgb(var(--colors-info-600))',
    700: 'rgb(var(--colors-info-700))',
    800: 'rgb(var(--colors-info-800))',
    900: 'rgb(var(--colors-info-900))',
    950: 'rgb(var(--colors-info-950))',
  },
  success: {
    50: 'rgb(var(--colors-success-50))',
    100: 'rgb(var(--colors-success-100))',
    200: 'rgb(var(--colors-success-200))',
    300: 'rgb(var(--colors-success-300))',
    400: 'rgb(var(--colors-success-400))',
    500: 'rgb(var(--colors-success-500))',
    600: 'rgb(var(--colors-success-600))',
    700: 'rgb(var(--colors-success-700))',
    800: 'rgb(var(--colors-success-800))',
    900: 'rgb(var(--colors-success-900))',
    950: 'rgb(var(--colors-success-950))',
  },
  warning: {
    50: 'rgb(var(--colors-warning-50))',
    100: 'rgb(var(--colors-warning-100))',
    200: 'rgb(var(--colors-warning-200))',
    300: 'rgb(var(--colors-warning-300))',
    400: 'rgb(var(--colors-warning-400))',
    500: 'rgb(var(--colors-warning-500))',
    600: 'rgb(var(--colors-warning-600))',
    700: 'rgb(var(--colors-warning-700))',
    800: 'rgb(var(--colors-warning-800))',
    900: 'rgb(var(--colors-warning-900))',
    950: 'rgb(var(--colors-warning-950))',
  },
  danger: {
    50: 'rgb(var(--colors-danger-50))',
    100: 'rgb(var(--colors-danger-100))',
    200: 'rgb(var(--colors-danger-200))',
    300: 'rgb(var(--colors-danger-300))',
    400: 'rgb(var(--colors-danger-400))',
    500: 'rgb(var(--colors-danger-500))',
    600: 'rgb(var(--colors-danger-600))',
    700: 'rgb(var(--colors-danger-700))',
    800: 'rgb(var(--colors-danger-800))',
    900: 'rgb(var(--colors-danger-900))',
    950: 'rgb(var(--colors-danger-950))',
  },
  magic: {
    50: 'rgb(var(--colors-magic-50))',
    100: 'rgb(var(--colors-magic-100))',
    200: 'rgb(var(--colors-magic-200))',
    300: 'rgb(var(--colors-magic-300))',
    400: 'rgb(var(--colors-magic-400))',
    500: 'rgb(var(--colors-magic-500))',
    600: 'rgb(var(--colors-magic-600))',
    700: 'rgb(var(--colors-magic-700))',
    800: 'rgb(var(--colors-magic-800))',
    900: 'rgb(var(--colors-magic-900))',
    950: 'rgb(var(--colors-magic-950))',
  },
}

const colors = {
  ...primitives,
  entity: {
    active: 'rgb(var(--colors-brand-500))',
  },
  status: {
    success: 'rgb(var(--colors-success-500))',
    warning: 'rgb(var(--colors-warning-500))',
    danger: 'rgb(var(--colors-danger-500))',
    magic: 'rgb(var(--colors-magic-500))',
    info: 'rgb(var(--colors-info-500))',
    unknown: 'rgb(var(--colors-base-500))',
  },
}

module.exports = {
  presets: [
    require('@crhio/leviat-tailwind-configuration'),
  ],
  theme: {
    extend: {
      colors: colors,
      fontFamily: {
        mono: ['SFMono-Regular', 'Consolas', 'Liberation Mono', 'Menlo', 'Courier', 'monospace'],
        leviat: ['Montserrat', 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif']
      },
      borderRadius: {
        input: '0.25rem',
        button: '0.25rem',
      },
    },    
  },
  content: [
    './index.html',
    './src/**/*.{vue,js,ts,jsx,tsx,mdx}',
  ],
  plugins: [
    require('@headlessui/tailwindcss')({ prefix: 'ui' }),
  ],
};
